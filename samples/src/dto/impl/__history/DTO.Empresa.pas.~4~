unit DTO.Empresa;

interface

uses DTO.Contracts.Samples, DTO.Pessoa, Types.Attributes.DTO4Delphi;

type

  TEmpresaDTO = class(TInterfacedObject, IEmpresa)
  private

  public
    constructor Create(AParent: IPessoa);
    destructor Destroy; override;
    class function New(AParent: IPessoa): IEmpresa;
    function Proprietario(AValue: String): IEmpresa; overload;
    function Propriertario: String; overload;
  end;

implementation

{ TEmpresaDTO }

constructor TEmpresaDTO.Create(AParent: IPessoa);
begin

end;

destructor TEmpresaDTO.Destroy;
begin

  inherited;
end;

class function TEmpresaDTO.New(AParent: IPessoa): IEmpresa;
begin
  Result := Self.Create;
end;

function TEmpresaDTO.Propriertario: String;
begin

end;

function TEmpresaDTO.Proprietario(AValue: String): IEmpresa;
begin

end;

end.
